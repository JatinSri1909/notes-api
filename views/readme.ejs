<!DOCTYPE html>
<html>
<head>
    <title>Notes API Documentation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
            background-color: #121212;
            color: #e0e0e0;
        }
        h1, h2 {
            color: #bb86fc;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            margin-bottom: 20px;
        }
        pre {
            background: #1e1e1e;
            color: #ffa200;
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
            font-size: 0.9em;
        }
        code {
            background: #2d2d2d;
            color: #f8f8f2;
            padding: 2px 4px;
            border-radius: 4px;
        }
        .endpoint {
            background: #2c2c2c;
            padding: 10px;
            border-left: 5px solid #bb86fc;
            margin-bottom: 20px;
            border-radius: 4px;
        }
        .endpoint strong {
            display: block;
            font-size: 1.2em;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <h1>Notes API</h1>
    <p>This is a simple API for managing notes.</p>

    <h2>Endpoints</h2>
    <ul>
        <li class="endpoint">
            <strong>POST /users/signup</strong> - Sign up a new user
            <pre>
Request Body:
{
    "username": "exampleUser",
    "email": "user@example.com",
    "password": "examplePassword"
}
Response:
{
    "user": {
        "_id": "userId",
        "username": "exampleUser",
        "email": "user@example.com",
        "createdAt": "timestamp",
        "updatedAt": "timestamp"
    },
    "token": "jwtToken"
}
            </pre>
        </li>
        <li class="endpoint">
            <strong>POST /users/signin</strong> - Sign in an existing user
            <pre>
Request Body:
{
    "email": "user@example.com",
    "password": "examplePassword"
}
Response:
{
    "user": {
        "_id": "userId",
        "username": "exampleUser",
        "email": "user@example.com",
        "createdAt": "timestamp",
        "updatedAt": "timestamp"
    },
    "token": "jwtToken"
}
            </pre>
        </li>
        <li class="endpoint">
            <strong>GET /notes</strong> - Get all notes for the authenticated user
            <pre>
Headers:
{
    "Authorization": "Bearer jwtToken"
}
Response:
[
    {
        "_id": "noteId",
        "title": "exampleTitle",
        "description": "exampleDescription",
        "userId": "userId",
        "createdAt": "timestamp",
        "updatedAt": "timestamp"
    }
]
            </pre>
        </li>
        <li class="endpoint">
            <strong>POST /notes</strong> - Create a new note
            <pre>
Headers:
{
    "Authorization": "Bearer jwtToken"
}
Request Body:
{
    "title": "exampleTitle",
    "description": "exampleDescription"
}
Response:
{
    "_id": "noteId",
    "title": "exampleTitle",
    "description": "exampleDescription",
    "userId": "userId",
    "createdAt": "timestamp",
    "updatedAt": "timestamp"
}
            </pre>
        </li>
        <li class="endpoint">
            <strong>PUT /notes/:id</strong> - Update a note by ID
            <pre>
Headers:
{
    "Authorization": "Bearer jwtToken"
}
Request Body:
{
    "title": "updatedTitle",
    "description": "updatedDescription"
}
Response:
{
    "_id": "noteId",
    "title": "updatedTitle",
    "description": "updatedDescription",
    "userId": "userId",
    "createdAt": "timestamp",
    "updatedAt": "timestamp"
}
            </pre>
        </li>
        <li class="endpoint">
            <strong>DELETE /notes/:id</strong> - Delete a note by ID
            <pre>
Headers:
{
    "Authorization": "Bearer jwtToken"
}
Response:
{
    "_id": "noteId",
    "title": "exampleTitle",
    "description": "exampleDescription",
    "userId": "userId",
    "createdAt": "timestamp",
    "updatedAt": "timestamp"
}
            </pre>
        </li>
    </ul>

    <h2>Environment Variables</h2>
    <ul>
        <li><strong>PORT</strong>: The port on which the server will run.</li>
        <li><strong>MONGODB_URI</strong>: The URI for connecting to MongoDB.</li>
        <li><strong>SECRET_KEY</strong>: The secret key for JWT token generation.</li>
    </ul>

    <h2>License</h2>
    <p>This project is licensed under the ISC License.</p>
</body>
</html>